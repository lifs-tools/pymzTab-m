# coding: utf-8

"""
    mzTab-M reference implementation and validation API.

    This is the mzTab-M reference implementation and validation API service.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: nils.hoffmann@isas.de
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mztab_m_swagger_client
from mztab_m_swagger_client.models.small_molecule_summary import SmallMoleculeSummary  # noqa: E501
from mztab_m_swagger_client.rest import ApiException

class TestSmallMoleculeSummary(unittest.TestCase):
    """SmallMoleculeSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SmallMoleculeSummary
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = mztab_m_swagger_client.models.small_molecule_summary.SmallMoleculeSummary()  # noqa: E501
        if include_optional :
            return SmallMoleculeSummary(
                prefix = 'SML', 
                header_prefix = 'SMH', 
                sml_id = 56, 
                smf_id_refs = [
                    56
                    ], 
                database_identifier = [
                    '0'
                    ], 
                chemical_formula = [
                    '0'
                    ], 
                smiles = [
                    '0'
                    ], 
                inchi = [
                    '0'
                    ], 
                chemical_name = [
                    '0'
                    ], 
                uri = [
                    '0'
                    ], 
                theoretical_neutral_mass = [
                    1.337
                    ], 
                adduct_ions = [
                    '0'
                    ], 
                reliability = '0', 
                best_id_confidence_measure = mztab_m_swagger_client.models.parameter.Parameter(
                    id = 1, 
                    cv_label = '0', 
                    cv_accession = '0', 
                    name = '0', 
                    value = '0', ), 
                best_id_confidence_value = 1.337, 
                abundance_assay = [
                    1.337
                    ], 
                abundance_study_variable = [
                    1.337
                    ], 
                abundance_variation_study_variable = [
                    1.337
                    ], 
                opt = [
                    mztab_m_swagger_client.models.opt_column_mapping.OptColumnMapping(
                        identifier = '0', 
                        param = mztab_m_swagger_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        value = '0', )
                    ], 
                comment = [
                    mztab_m_swagger_client.models.comment.Comment(
                        prefix = 'COM', 
                        msg = '0', 
                        line_number = 56, )
                    ]
            )
        else :
            return SmallMoleculeSummary(
                sml_id = 56,
        )

    def testSmallMoleculeSummary(self):
        """Test SmallMoleculeSummary"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
