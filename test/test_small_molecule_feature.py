# coding: utf-8

"""
    mzTab-M reference implementation and validation API.

    This is the mzTab-M reference implementation and validation API service.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: nils.hoffmann@isas.de
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mztab_m_swagger_client
from mztab_m_swagger_client.models.small_molecule_feature import SmallMoleculeFeature  # noqa: E501
from mztab_m_swagger_client.rest import ApiException

class TestSmallMoleculeFeature(unittest.TestCase):
    """SmallMoleculeFeature unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SmallMoleculeFeature
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = mztab_m_swagger_client.models.small_molecule_feature.SmallMoleculeFeature()  # noqa: E501
        if include_optional :
            return SmallMoleculeFeature(
                prefix = 'SMF', 
                header_prefix = 'SFH', 
                smf_id = 56, 
                sme_id_refs = [
                    56
                    ], 
                sme_id_ref_ambiguity_code = 56, 
                adduct_ion = 'a', 
                isotopomer = mztab_m_swagger_client.models.parameter.Parameter(
                    id = 1, 
                    cv_label = '0', 
                    cv_accession = '0', 
                    name = '0', 
                    value = '0', ), 
                exp_mass_to_charge = 1.337, 
                charge = 56, 
                retention_time_in_seconds = 1.337, 
                retention_time_in_seconds_start = 1.337, 
                retention_time_in_seconds_end = 1.337, 
                abundance_assay = [
                    1.337
                    ], 
                opt = [
                    mztab_m_swagger_client.models.opt_column_mapping.OptColumnMapping(
                        identifier = '0', 
                        param = mztab_m_swagger_client.models.parameter.Parameter(
                            id = 1, 
                            cv_label = '0', 
                            cv_accession = '0', 
                            name = '0', 
                            value = '0', ), 
                        value = '0', )
                    ], 
                comment = [
                    mztab_m_swagger_client.models.comment.Comment(
                        prefix = 'COM', 
                        msg = '0', 
                        line_number = 56, )
                    ]
            )
        else :
            return SmallMoleculeFeature(
                smf_id = 56,
                exp_mass_to_charge = 1.337,
                charge = 56,
        )

    def testSmallMoleculeFeature(self):
        """Test SmallMoleculeFeature"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
